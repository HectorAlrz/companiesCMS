{"version":3,"sources":["lib/api.js","lib/validations.js","components/DataInput/index.js","components/TextInput/index.js","Pages/AddCompanie/index.js","components/CompanieCard/index.js","Pages/CompanieList/index.js","Pages/CompanieInfo/index.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","getCompanies","a","fetch","response","json","getCompaniesById","id","addCompany","companyData","config","method","headers","Accept","body","JSON","stringify","newCompany","companySchema","Yup","name","min","max","required","description","email","logo_url","DataInput","label","props","useField","field","meta","className","htmlFor","touched","error","TextInput","AddCompanie","useState","falsePop","setFalsePop","navigate","useNavigate","newCompanieHandler","values","console","log","success","Error","message","initialValues","url","crunchbase_url","linkedin_url","twitter_url","validationSchema","onSubmit","setSubmitting","setTimeout","alert","type","CompanieCard","title","resume","image","src","alt","CompanieList","companieCards","setCompanieCards","useEffect","result","data","companies","fetchData","map","item","_id","to","CompanieInfo","useParams","info","setInfo","companie","xmlns","fill","viewBox","stroke","d","href","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8656cfd.chunk.js","sourcesContent":["//const BASE_URL = ''\nconst BASE_URL = 'http://localhost:3002'\n\nexport const getCompanies = async () => {\n    const response = await fetch(`${BASE_URL}/companies`)\n    const json = await response.json()\n    return json\n}\n\nexport const getCompaniesById = async (id) => {\n    const response = await fetch(`${BASE_URL}/companies/${id}`)\n    const json = await response.json()\n    return json\n}\n\nexport const addCompany = async (companyData) => {\n    const config = {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(companyData)\n    }\n    const newCompany = await fetch(`${BASE_URL}/companies/addCompany`, config)\n    const response = await newCompany.json()\n    return response\n  }","import * as Yup from 'yup'\n\nexport const companySchema = Yup.object({\n    name: Yup.string()\n      .min(2,'The company must have at least 2 characters.')\n      .max(30,'No more than 30 characters.')\n      .required('This field is required.'),\n      description: Yup.string()\n      .min(20,'Description must contain at least 20 characters.')\n      .max(300,'Desription must contain no more than 150 characters.')\n      .required('This field is required.'),\n      email: Yup.string()\n        .email('Must be a valid email.')\n        .required('This field is required.'),\n      logo_url: Yup.string()\n        .required('This field is required.'),\n  })","import React, { useState } from 'react'\nimport {useField } from 'formik'\nimport * as Yup from 'yup'\n\n\nconst DataInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props)\n  return (\n    <>\n    <div className='h-auto my-5 flex flex-col flex-auto'>\n      <label\n        className='flex peer text-sm mb-1 text-gray-700 '\n        htmlFor={props.id || props.name}\n      >\n        {label}\n      </label>\n      \n      <input\n        className={(meta.touched && meta.error) ? 'w-280px h-30px pl-1 pt-1  border-2 border-red-700 rounded' : 'w-280px h-30px pl-1 pt-1 hover:border-gray-400 bg-white rounded border  focus:bg-white focus:shadow-xl'}\n        {...field}\n        {...props}\n      />\n      {(meta.touched && meta.error) && (\n        <div className='w-280px lg:w-full top-12     text-white text-xs bg-red-500 text-center rounded'>{meta.error}</div>\n      )}\n    </div>\n    </>\n  )\n}\n\nexport default DataInput","import React, { useState } from 'react'\nimport {useField } from 'formik'\nimport * as Yup from 'yup'\n\n\nconst TextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props)\n  return (\n    <>\n    <div className='h-auto my-5 flex flex-col flex-auto'>\n      <label\n        className='peer text-sm mb-1 text-gray-700 '\n        htmlFor={props.id || props.name}\n      >\n        {label}\n      </label>\n      <textarea\n        className='w-280px sm:w-full pl-1 pt-1 hover:border-gray-800 bg-white rounded border  focus:bg-white focus:shadow-xl'\n        {...field}\n        {...props}\n      />\n      {(meta.touched && meta.error) && (\n        <div className='w-280px lg:w-full top-12 mt-1 text-white bg-red-500 text-center rounded'>{meta.error}</div>\n      )}\n    </div>\n    </>\n  )\n}\n\nexport default TextInput","import React, { useState } from \"react\";\nimport { Formik, Form } from 'formik'\nimport {  useNavigate } from 'react-router-dom'\nimport {addCompany} from '../../lib/api'\n\nimport { companySchema } from \"../../lib/validations\";\n\nimport DataInput from \"../../components/DataInput\"\nimport TextInput from \"../../components/TextInput\"\n\n\nexport default function AddCompanie() {\n    const [falsePop, setFalsePop] = useState(false)\n    const navigate = useNavigate()\n    const newCompanieHandler = async (values) => {\n        try {\n            console.log(values)\n            if (values) {\n              const response = await addCompany(values)\n              const success = response.success\n              if (success) {\n                navigate('/')\n              } else {\n                setFalsePop(true)\n              }\n            } else throw new Error()\n          } catch (error) { console.log((error.message)) }\n        }\n\n    return (\n        <>\n            <div className=\"flex justify-center text-left mt-10px\">\n                <div className='border-2 border-gray-400 p-4 rounded-md mb-5 shadow-inner'>\n                    <h3 >Create a New Company</h3>\n                    {\n                falsePop ?\n                <div className='flex justify-center text-red-800  bg-red-200 text-center rounded p-1 w-280px md:w-408px lg:w-539px'>\n                  <p>The company already exist</p>\n                </div>\n                : null\n              }\n                    <Formik\n                        // .: form model formik\n                        initialValues={{\n                            name: '',\n                            description: '',\n                            logo_url: '',\n                            email: '',\n                            url: '',\n                            crunchbase_url: '',\n                            linkedin_url: '',\n                            twitter_url: '',\n                        }}\n                        // .: Validation Schema using Yup\n                        validationSchema={companySchema}\n                        onSubmit={(values, { setSubmitting }) => {\n                            setTimeout(() => {\n                                alert(JSON.stringify(values, null, 2))\n                                setSubmitting(false)\n                                newCompanieHandler(values)\n                            }, 400)\n                        }}\n                    >\n                        <Form>\n                            <div className='flex justify-center'>\n                                <DataInput\n                                    label='Company Name'\n                                    name='name'\n                                    type='text'\n                                />\n                            </div>\n                            <div className='flex flex-col lg:flex-row content-center'>\n                                <div className='flex justify-center flex-col mr-5'>\n                                    <DataInput\n                                        label='Company Website URL'\n                                        name='url'\n                                        type='text'\n                                    />\n                                    <DataInput\n                                        label='Logo URL'\n                                        name='logo_url'\n                                        type='text'\n                                    />\n                                    <DataInput\n                                        label='Crunchbase URL'\n                                        name='crunchbase_url'\n                                        type='text'\n                                    />\n                                </div>\n                                <div className='flex justify-center flex-col'>\n                                    <DataInput\n                                        label='Email Adress'\n                                        name='email'\n                                        type='text'\n                                    />\n                                    <DataInput\n                                        label='Twitter Handle'\n                                        name='twitter_url'\n                                        type='text'\n                                    />\n                                    <DataInput\n                                        label='LinkedIn Url'\n                                        name='linkedin_url'\n                                        type='text'\n                                    />\n                                </div>\n                            </div>\n                            <div className='flex justify-center'>\n                                <TextInput\n                                    label='Description'\n                                    name='description'\n                                    type='text'\n                                />\n                            </div>\n\n                            <div className='flex justify-end'>\n                                <button type='submit' className=' bg-blue-400 w-100px  h-30px mb-1 bg-plover-blue hover:bg-blue-700 text-white font-normal rounded'>\n                                    Save\n                                </button>\n                            </div>\n                        </Form>\n                    </Formik>\n                </div>\n            </div>\n        </>\n    )\n}","import React from 'react'\n\n\nexport default function CompanieCard({ title, resume, image }) {\n\n    return (\n        <>\n            <div className='text-center border-2 border-black rounded shadow-2xl mb-4 pr-2 hover:bg-gray-200 w-280px sm:w-539px'>\n\n                <h2 className='text-center sm:text-left sm:pl-2'>{title}</h2>\n\n                <div className='flex flex-wrap sm:flex-nowrap justify-center sm:justify-start  p-2 sm:p-3'>\n\n                    <div className='flex justify-center w-12 h-10 mr-2  mb-1'>\n                        <img className='object-fit border-2' src={image} alt='img' />\n                    </div>\n\n                    <div className='flex content-center sm:w-392px '>\n                        <p className='text-xs sm:text-left'>{resume}</p>\n                    </div>\n\n                </div>\n            </div>\n        </>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Link,\n} from \"react-router-dom\"\n\n// .: API\nimport { getCompanies } from '../../lib/api'\n\n// .: Components\nimport CompanieCard from \"../../components/CompanieCard\";\n\nexport default function CompanieList() {\n    const [companieCards, setCompanieCards] = useState([])\n\n    useEffect(() => {\n        async function fetchData() {\n            const result = await getCompanies()\n            setCompanieCards(result.data.companies)\n            console.log('companies', result.data.companies)\n            console.log('estado', companieCards)\n        }\n        fetchData()\n    }, [])\n\n    return (\n        <div className=\"flex justify-center text-center mt-10\">\n            <div className=''>\n                <div className='mb-2'>\n                    <h3 className=' text-center text-2xl'>Companies CMS</h3>\n                </div>\n                {\n                    companieCards.map((item) => {\n                        const { _id, name, description, logo_url } = item\n                        console.log(name)\n                        return (\n                            <Link to={`/CompanieInfo/${_id}`}>\n                                <CompanieCard\n                                    title={name}\n                                    key={_id}\n                                    resume={description}\n                                    image={logo_url}\n                                />\n                            </Link>\n                        )\n                    })\n                }\n                <Link to=\"/AddCompanie\">\n                <button type='submit' className='flex flex-end bg-blue-400   p-1 h-30px mb-1 bg-plover-blue hover:bg-blue-700 text-white text-md font-normal rounded'>\n                    Add  Company           \n                </button>\n                </Link>\n            </div>\n        </div>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { getCompaniesById } from \"../../lib/api\";\n\nexport default function CompanieInfo() {\n    \n    let {id} = useParams()\n    const [info, setInfo] = useState([])\n    const {name, email, description, logo_url, url, linkedin_url, crunchbase_url, twitter_url} = info\n\n    useEffect(()=>{\n        async function fetchData(){\n            const result = await getCompaniesById(id)\n            console.log('info', result.data.companie)\n            setInfo(result.data.companie)\n        }\n        fetchData(id)\n    }, [])\n\n     return (\n        <div className=\"flex justify-center text-center mt-50px\">\n\n            <div className='text-center border-2 border-black rounded shadow-2xl w-280px sm:w-539px'>\n                <div>\n                    <div className='flex flex-wrap sm:flex-nowrap justify-center sm:justify-between   p-2 sm:p-3'>\n\n                        <div className='flex justify-center mr-2'>\n                            <img className='object-fit border-2 w-100px h-100px ' src={logo_url} alt='img' />\n                        </div>\n\n                        <div className='flex flex-col justify-between content-center sm:w-392px '>\n                            <h1 className='text-center sm:text-left text-3xl pb-1'>{name}</h1>\n                            <p className='text-xs sm:text-left'>{description}</p>\n                        </div>\n\n                    </div>\n\n                    <div className='flex justify-start mb-2'>\n                        <ul className='flex flex-col text-xs text-center italic'>\n                            <li className='flex p-3 h-8' >\n                                <div className='flex mr-2'>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 \" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                                    </svg>\n                                </div>\n                                <a className='hover:text-blue-800 underline' href={url}>{url}</a>\n                            </li>\n                            <li className='flex p-3 h-8' >\n                                <div className='flex mr-2'>\n                                    <svg viewBox=\"0 0 128 128\" className=\"h-5 w-5\">\n                                        <path d=\"M40.254 127.637c48.305 0 74.719-48.957 74.719-91.403 0-1.39 0-2.777-.075-4.156 5.141-4.547 9.579-10.18 13.102-16.633-4.79 2.602-9.871 4.305-15.078 5.063 5.48-4.02 9.582-10.336 11.539-17.774-5.156 3.743-10.797 6.38-16.68 7.801-8.136-10.586-21.07-13.18-31.547-6.32-10.472 6.86-15.882 21.46-13.199 35.617C41.922 38.539 22.246 26.336 8.915 6.27 1.933 20.94 5.487 39.723 17.022 49.16c-4.148-.172-8.207-1.555-11.832-4.031v.41c0 15.273 8.786 28.438 21.02 31.492a21.596 21.596 0 01-11.863.543c3.437 13.094 13.297 22.07 24.535 22.328-9.305 8.918-20.793 13.75-32.617 13.72-2.094 0-4.188-.15-6.266-.446 12.008 9.433 25.98 14.441 40.254 14.422\" fill=\"#1da1f2\"></path>\n                                    </svg>\n                                </div>\n                                <a className='hover:text-blue-800 underline' href={twitter_url}>{twitter_url}</a>\n                            </li>\n                            <li className='flex p-3 h-8' >\n                                <div className='flex mr-2'>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                                    </svg>\n                                </div>\n                                <a className='hover:text-blue-800 unerline' href='https://wwww.gmail.com'>{email}</a>\n                            </li>\n                            <li className='flex p-3 h-8' >\n                                <div className='flex mr-2'>\n                                    <svg viewBox=\"0 0 128 128\" className=\"h-5 w-5\">\n                                        <path fill=\"#0076b2\" d=\"M116 3H12a8.91 8.91 0 00-9 8.8v104.42a8.91 8.91 0 009 8.78h104a8.93 8.93 0 009-8.81V11.77A8.93 8.93 0 00116 3z\"></path><path fill=\"#fff\" d=\"M21.06 48.73h18.11V107H21.06zm9.06-29a10.5 10.5 0 11-10.5 10.49 10.5 10.5 0 0110.5-10.49M50.53 48.73h17.36v8h.24c2.42-4.58 8.32-9.41 17.13-9.41C103.6 47.28 107 59.35 107 75v32H88.89V78.65c0-6.75-.12-15.44-9.41-15.44s-10.87 7.36-10.87 15V107H50.53z\"></path>\n                                    </svg>\n                                </div>\n                                <a className='hover:text-blue-800 underline' href={linkedin_url}>{`@linkedin/${name}`}</a>\n                            </li>\n                            <li className='flex p-3 h-8' >\n                                <div className='flex mr-2'>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n                                    </svg>\n                                </div>\n                                <a className='hover:text-blue-800 underline' href={crunchbase_url}>{`crunchbase/${name}`}</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link,\n} from \"react-router-dom\"\n\n// .: Components\nimport AddCompanie from './Pages/AddCompanie';\nimport CompanieList from './Pages/CompanieList';\nimport CompanieInfo from './Pages/CompanieInfo'\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <div className='flexflex-col justify-center '>\n          <nav className='flex items-center justify-center flex-wrap p-6'>\n            <Link className=\"inline-block border border-blue-500 rounded py-1 px-3 mr-3 bg-blue-500 text-white\" to=\"/\">Home</Link>\n            <Link className=\"inline-block border border-blue-500 rounded py-1 px-3 mr-3 bg-blue-500 text-white\" to=\"/addCompanie\">Add Company</Link>\n          </nav>\n            <Routes>\n              <Route path='/' element={<CompanieList />} />\n              <Route path='AddCompanie' element={<AddCompanie />} />\n              <Route path='/CompanieInfo/:id' element={<CompanieInfo />} />\n            </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}